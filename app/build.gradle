apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.skyqgorecruitmenttest"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def retrofit_version = '2.6.0'
    def okhttp_version = '3.9.1'
    def picasso_version = '2.71828'
    def junit_jupiter_version = '5.4.2'


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'

    implementation 'com.google.android.material:material:1.1.0'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    androidTestImplementation "io.mockk:mockk-android:1.9.3.kotlin12"


    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    //Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    //RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'

    //LifeCycle Extensions
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Glide Image Loader
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    //kapt 'com.github.bumptech.glide:compiler:4.2.0'

    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"

    implementation 'com.google.code.gson:gson:2.8.5'


    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // Dagger

    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.20'
    kapt 'com.google.dagger:dagger-compiler:2.20'

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'

    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.1'

    def room_version = "2.2.3"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

}
